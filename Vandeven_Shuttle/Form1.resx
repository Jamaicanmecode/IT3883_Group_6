<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>